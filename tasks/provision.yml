---

- name: check openstack config file
  stat:
    path: "{{ config_file }}"
  register: st

- name: include openstack details
  include_vars: "{{ config_file }}"
  when: st.stat.exists and st.stat.isreg

- name: get network names
  os_networks_facts:

- name: create temporary heat file
  tempfile:
    state: file
    suffix: temp
  register: temp_heat_file

- block:

  - name: create heat file contents
    template:
      src: stack.yml.j2
      dest: "{{ temp_heat_file.path }}"
    when: temp_heat_file.path is defined

  - name: create/update stack
    os_stack:
      name: "{{ nodes[0].app_name | default('stack') }}"
      tag: "{{ nodes[0].app_name | replace(' ', '_') | default('stack') }}"
      state: present
      template: "{{ temp_heat_file.path }}"
      parameters:
        public_network_id: "{{ (openstack_networks |  selectattr('name', 'search', public_network_name) | list | first).id }}"
    register: deploy
    when:
      - nodes is defined
      - nodes[0] is defined
      - temp_heat_file is defined
      - temp_heat_file.path is defined

  - name: waiting for servers to come online
    wait_for:
      host: "{{ item.output_value.floating_ip }}"
      port: "{{ item.output_value.ansible_port | default(ansible_port) }}"
      timeout: "{{ instance_wait_connection_timeout }}"
    with_items: "{{ deploy.stack.outputs }}"
    when:
      - nodes is defined
      - deploy is defined
      - deploy.stack is defined
      - deploy.stack.outputs is defined
      - "'public_ip' in item.output_key"

- rescue:

  - debug:
      msg: 'There was an issue creating stack'

- always:

  - name: remove temp heat file
    file:
      path: "{{ temp_heat_file.path }}"
      state: absent